import React, { useState, useCallback } from "react";
import { Button, Text, View, TouchableOpacity, StyleSheet, TextInput } from "react-native";
import Modal from "react-native-modal";
import PeriodDropDown from "./PeriodDropDown";

function ModalTester() {
  const [isModalVisible, setModalVisible] = useState(false);
  const [isTextInputVisible, setTextInputVisible] = useState(false);
  const [selectedValue, setSelectedValue] = useState();

  const toggleModal = () => {
    setModalVisible(!isModalVisible);
  };

  const setSelectValue = (selectvalue)=>{
    setSelectedValue(selectvalue);
}

const test = ()=>{
  console.log(selectedValue);
}

const [min, setMin] = useState(1);
  const minUp = useCallback(()=>setMin((min) => {return min+1}), []);
  const minDown = useCallback(()=>setMin((min) => { 
    if(min >= 2 ) min = min-1;
    return min}), []);

  return (
    <View style={{ flex: 1 }}>
      <Button title="Show modal" onPress={toggleModal} />
      

      <Modal isVisible={isModalVisible}>
        <View style={styles.View}>
          <Text style={styles.title}>알림 설정</Text>
          <Text style={styles.explaination}>재고가 몇 개 미만 일때 며칠마다 알림을 받을지 설정합니다.</Text>
          <Text onPress={test} style={[styles.seventeen, {left:22, top:165}]}>재고 개수</Text>

          <View style={styles.grey}>
            <TouchableOpacity onPress={minDown}>
              <Text style={styles.min}>-</Text>
            </TouchableOpacity>
            <Text style={styles.min}>{min}</Text>
            <TouchableOpacity onPress={minUp}>
              <Text style={styles.min}>+</Text>
            </TouchableOpacity>
          </View>
            
       
          <Text style={[styles.seventeen, {left:22, top:165}]}>기간</Text>
          <View style={styles.dropdownview}>
            <PeriodDropDown setSelectValue={setSelectValue} onValueChange={test}></PeriodDropDown>
          </View>
          {isTextInputVisible && <TextInput style={styles.grey}></TextInput>}
         
          <View style={styles.addcan}>
              <TouchableOpacity style={styles.red} onPress={toggleModal}>
                <Text style={styles.white}>저장하기</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.cancelO}  onPress={toggleModal}>
                <Text style={styles.fourteen}>취소</Text>
              </TouchableOpacity>
            </View>
         
       


        </View>
      </Modal>
    </View>
  );
}

const styles = StyleSheet.create({
  View: {
    height:'75%', backgroundColor:'white'
  },
  title: {
    fontSize:22, position:"relative", fontWeight:'bold', color:'#121214', left:22, top:100
  },
  explaination: {
    fontSize:17, position:"relative", left:37, top:135, width:278, color:'#545454'
  },
  grey: {
   paddingHorizontal:50, paddingVertical:6, position:"relative", left:111, top:130, marginVertical:6, width:230, height:38, borderRadius:10, backgroundColor: '#FCFCFC', flexDirection:"row", justifyContent:"space-between" 
  },
  dropdownview: {
    position:'relative', left:111, top:130, width:217

  },
  min: {
    fontSize:17, color:'#545454'
  },
  seventeen: {
    fontSize:17, color:'#121214', position:'relative'
  },
  fourteen: {
    fontSize:14, color:'#121214', textAlign:"center"
  },
  cancelO: {
    width:50, height:38,borderRadius:5, backgroundColor: '#EFEFEF', paddingTop:8, marginLeft:20
  },
  addcan: {
    flexDirection:'row',marginLeft:178, marginTop:20, position:'relative', left:20, top:150,
  },
  red: {
    width:71, height:38, borderRadius:5, position:'relative', backgroundColor: '#FF5454', padding:8
  },
  white: {
    color:'white', fontSize:14, textAlign:"center"
  },
 });

export default ModalTester;
